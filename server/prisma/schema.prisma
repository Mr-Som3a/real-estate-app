// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  username   String
  password   String
  imgUrl     String?
  posts      Post[]
  savedPosts SavedPost[]

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Post {
  id          Int         @id @default(autoincrement())
  title       String
  address     String
  price       Int
  beds        Int
  baths       Int
  areaSqft    Int
  type        String
  status      String
  yearBuilt   Int
  description String
  features    String[]
  nearby      String[]
  images      String[]
  lat         Float
  lng         Float
  agent       Agent?      @relation(fields: [agentId], references: [id])
  User        User?       @relation(fields: [userId], references: [id])
  userId      Int?
  PostDetail  PostDetail?
  SavedPost   SavedPost?
  agentId     Int?
}

model Agent {
  id      Int    @id @default(autoincrement())
  name    String
  phone   String
  email   String
  company String
  avatar  String
  posts    Post[] 

}

model PostDetail {
  id         Int     @id @default(autoincrement())
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  post       Post    @relation(fields: [postId], references: [id])
  postId     Int     @unique
}

model SavedPost {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  postId    Int      @unique
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Message {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  text       String?
  imgUrl     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}
